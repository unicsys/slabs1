import requests
import urllib.parse

# --- CONFIGURATION ---
# Enter the Host and API Token for your Mobi instance
MOBI_HOST = "https://localhost:8443"
API_TOKEN = "your_full_api_token_here"

# The full IRI of the catalog you want to search in
CATALOG_IRI = "http://mobi.com/catalog-local"

# --- SCRIPT ---

def get_all_record_iris():
    """
    Connects to the Mobi API to fetch and print the IRIs of all records in the specified catalog.
    """
    print(f"Fetching record IRIs from catalog: {CATALOG_IRI}")
    
    # URL-encode the catalog IRI to use it safely in the path
    encoded_catalog_iri = urllib.parse.quote(CATALOG_IRI, safe='')
    list_url = f"{MOBI_HOST}/mobirest/catalogs/{encoded_catalog_iri}/records"
    
    headers = {'Cookie': f'mobi_web_token={API_TOKEN}'}
    params = {
        'limit': 100,  # You can increase this limit if you have more than 100 records
        'offset': 0,
        'sort': 'http://purl.org/dc/terms/title'
    }
    
    try:
        requests.packages.urllib3.disable_warnings()
        response = requests.get(list_url, headers=headers, params=params, verify=False, timeout=30)
        response.raise_for_status()
        
        records = response.json()

        if not records:
            print("\n❌ No records were found in this catalog.")
            return

        print("\n✅ Found the following record IRIs:\n")
        for record in records:
            title = record.get('http://purl.org/dc/terms/title', [{}])[0].get('@value', 'No Title')
            iri = record.get('@id', 'No IRI Found')
            
            print(f"Title: {title}")
            print(f"IRI: {iri}\n")

    except requests.exceptions.RequestException as e:
        print(f"❌ An error occurred: {e}")
        if e.response is not None:
            print(f"Response Body: {e.response.text}")


if __name__ == "__main__":
    if API_TOKEN == "your_full_api_token_here":
        print("Please update the API_TOKEN variable in the script before running.")
    else:
        get_all_record_iris()

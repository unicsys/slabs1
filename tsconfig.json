<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/vis-network/9.1.2/dist/dist/vis-network.min.css" integrity="sha512-WgxfT5LWjfszlPHXRmBWHkV2eceiWTOBvrKCNbdgDYTHrT2AeLCGbF4sZlZw3UMN3WtL0tGUoIAKsu8mllg/XA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vis-network/9.1.2/dist/vis-network.min.js" integrity="sha512-LnvoEWDFrqGHlHmDD2101OrLcbsfkrzoSpvtSQtxK3RMnRV0eOkhhBN2dXHKRrUU8p2DGRTk35n4O8nWSVe1mQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous" />
    
    <style type="text/css">
        body {
            margin: 0;
            padding: 20px;
            font-family: Arial, sans-serif;
        }
        
        .container-fluid {
            max-width: 100%;
        }
        
        .table-container {
            margin-bottom: 30px;
            text-align: center;
        }
        
        .data-table {
            margin: 0 auto;
            max-width: 600px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .data-table th {
            background-color: #4CAF50;
            color: white;
        }
        
        .data-table td {
            cursor: pointer;
            transition: background-color 0.3s;
        }
        
        .data-table td:hover {
            background-color: #f0f0f0;
        }
        
        .data-table td.highlighted {
            background-color: #FFD700 !important;
            font-weight: bold;
        }
        
        .graphs-container {
            display: flex;
            gap: 20px;
            justify-content: space-between;
        }
        
        .graph-wrapper {
            flex: 1;
            min-width: 0;
        }
        
        .graph-title {
            text-align: center;
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 10px;
            color: #333;
        }
        
        .network-container {
            width: 100%;
            height: 600px;
            background-color: #ffffff;
            border: 2px solid #ddd;
            border-radius: 5px;
        }
    </style>
</head>

<body>
    <div class="container-fluid">
        <h1 style="text-align: center; margin-bottom: 30px;">Ontology & Knowledge Graph Visualization</h1>
        
        <!-- Data Table -->
        <div class="table-container">
            <h3>Source Data</h3>
            <table class="table table-striped table-bordered data-table">
                <thead>
                    <tr>
                        <th>Operator</th>
                        <th>Aircraft</th>
                        <th>R_Date</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td data-node="JohnDoe">John Doe</td>
                        <td data-node="N737AA">Aircraft N737AA</td>
                        <td data-node="Date-01">1-Jan-25</td>
                    </tr>
                    <tr>
                        <td data-node="JaneSmith">Jane Smith</td>
                        <td data-node="N905FR">Aircraft N905FR</td>
                        <td data-node="Date-02">1-Feb-25</td>
                    </tr>
                    <tr>
                        <td data-node="JohnDoe">John Doe</td>
                        <td data-node="N905FR">Aircraft N905FR</td>
                        <td data-node="Date-03">1-Mar-25</td>
                    </tr>
                </tbody>
            </table>
        </div>
        
        <!-- Graphs Side by Side -->
        <div class="graphs-container">
            <!-- Left: Ontology Only -->
            <div class="graph-wrapper">
                <div class="graph-title">Ontology (Schema)</div>
                <div id="ontologyNetwork" class="network-container"></div>
            </div>
            
            <!-- Right: Knowledge Graph (Ontology + Data) -->
            <div class="graph-wrapper">
                <div class="graph-title">Knowledge Graph (Schema + Instances)</div>
                <div id="knowledgeGraphNetwork" class="network-container"></div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        // Ontology nodes (classes only)
        var ontologyNodes = new vis.DataSet([
            {"color": "#FDD4A0", "font": {"color": "black"}, "id": "Entity", "label": "Entity", "shape": "box", "size": 30, "title": "The most general category of thing."},
            {"color": "#FDD4A0", "font": {"color": "black"}, "id": "Continuant", "label": "Continuant", "shape": "box", "size": 25, "title": "Something that exists in full at any time (e.g., an object)."},
            {"color": "#FDD4A0", "font": {"color": "black"}, "id": "Occurrent", "label": "Occurrent", "shape": "box", "size": 25, "title": "Something that happens over time (e.g., a process)."},
            {"color": "#FFA500", "font": {"color": "black"}, "id": "Aircraft", "label": "Aircraft", "shape": "box", "size": 20, "title": "Our Class for aircraft."},
            {"color": "#FFA500", "font": {"color": "black"}, "id": "Person", "label": "Person", "shape": "box", "size": 20, "title": "Our Class for people."},
            {"color": "#FFA500", "font": {"color": "black"}, "id": "RepairProcess", "label": "RepairProcess", "shape": "box", "size": 20, "title": "Our Class for repair events."},
            {"color": "#FFA500", "font": {"color": "black"}, "id": "TimeInterval", "label": "TimeInterval", "shape": "box", "size": 20, "title": "Our Class for time intervals."}
        ]);
        
        var ontologyEdges = new vis.DataSet([
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "Continuant", "label": "rdfs:subClassOf", "to": "Entity"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "Occurrent", "label": "rdfs:subClassOf", "to": "Entity"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "Aircraft", "label": "rdfs:subClassOf", "to": "Continuant"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "Person", "label": "rdfs:subClassOf", "to": "Continuant"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "RepairProcess", "label": "rdfs:subClassOf", "to": "Occurrent"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "TimeInterval", "label": "rdfs:subClassOf", "to": "Occurrent"},
            {"arrows": "to", "color": "#DC143C", "from": "RepairProcess", "label": "has_participant", "to": "Aircraft", "width": 2},
            {"arrows": "to", "color": "#DC143C", "from": "RepairProcess", "label": "has_participant", "to": "Person", "width": 2},
            {"arrows": "to", "color": "#228B22", "from": "RepairProcess", "label": "occurs_on", "to": "TimeInterval", "width": 2}
        ]);

        // Knowledge Graph nodes (classes + instances)
        var kgNodes = new vis.DataSet([
            {"color": "#FDD4A0", "font": {"color": "black"}, "id": "Entity", "label": "Entity", "shape": "box", "size": 30, "title": "The most general category of thing."},
            {"color": "#FDD4A0", "font": {"color": "black"}, "id": "Continuant", "label": "Continuant", "shape": "box", "size": 25, "title": "Something that exists in full at any time (e.g., an object)."},
            {"color": "#FDD4A0", "font": {"color": "black"}, "id": "Occurrent", "label": "Occurrent", "shape": "box", "size": 25, "title": "Something that happens over time (e.g., a process)."},
            {"color": "#FFA500", "font": {"color": "black"}, "id": "Aircraft", "label": "Aircraft", "shape": "box", "size": 20, "title": "Our Class for aircraft."},
            {"color": "#FFA500", "font": {"color": "black"}, "id": "Person", "label": "Person", "shape": "box", "size": 20, "title": "Our Class for people."},
            {"color": "#FFA500", "font": {"color": "black"}, "id": "RepairProcess", "label": "RepairProcess", "shape": "box", "size": 20, "title": "Our Class for repair events."},
            {"color": "#FFA500", "font": {"color": "black"}, "id": "TimeInterval", "label": "TimeInterval", "shape": "box", "size": 20, "title": "Our Class for time intervals."},
            {"color": "#8A2BE2", "font": {"color": "black"}, "id": "N737AA", "label": "Aircraft N737AA", "shape": "dot", "size": 25},
            {"color": "#8A2BE2", "font": {"color": "black"}, "id": "JohnDoe", "label": "John Doe", "shape": "dot", "size": 20},
            {"color": "#8A2BE2", "font": {"color": "black"}, "id": "Repair-01", "label": "Repair-01", "shape": "dot", "size": 20, "title": "Repair event 01"},
            {"color": "#8A2BE2", "font": {"color": "black"}, "id": "N905FR", "label": "Aircraft N905FR", "shape": "dot", "size": 25},
            {"color": "#8A2BE2", "font": {"color": "black"}, "id": "JaneSmith", "label": "Jane Smith", "shape": "dot", "size": 20},
            {"color": "#8A2BE2", "font": {"color": "black"}, "id": "Repair-02", "label": "Repair-02", "shape": "dot", "size": 20, "title": "Repair event 02"},
            {"color": "#8A2BE2", "font": {"color": "black"}, "id": "Repair-03", "label": "Repair-03", "shape": "dot", "size": 20, "title": "Repair event 03"},
            {"color": "#9370DB", "font": {"color": "black"}, "id": "Date-01", "label": "1-Jan-25", "shape": "dot", "size": 20, "title": "Time interval: 1-Jan-25"},
            {"color": "#9370DB", "font": {"color": "black"}, "id": "Date-02", "label": "1-Feb-25", "shape": "dot", "size": 20, "title": "Time interval: 1-Feb-25"},
            {"color": "#9370DB", "font": {"color": "black"}, "id": "Date-03", "label": "1-Mar-25", "shape": "dot", "size": 20, "title": "Time interval: 1-Mar-25"}
        ]);
        
        var kgEdges = new vis.DataSet([
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "Continuant", "label": "is a", "to": "Entity"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "Occurrent", "label": "is a", "to": "Entity"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "Aircraft", "label": "is a", "to": "Continuant"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "Person", "label": "is a", "to": "Continuant"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "RepairProcess", "label": "is a", "to": "Occurrent"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "TimeInterval", "label": "is a", "to": "Occurrent"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "N737AA", "label": "is a", "title": "rdf:type", "to": "Aircraft"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "JohnDoe", "label": "is a", "title": "rdf:type", "to": "Person"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "Repair-01", "label": "is a", "title": "rdf:type", "to": "RepairProcess"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "N905FR", "label": "is a", "title": "rdf:type", "to": "Aircraft"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "JaneSmith", "label": "is a", "title": "rdf:type", "to": "Person"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "Repair-02", "label": "is a", "title": "rdf:type", "to": "RepairProcess"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "Repair-03", "label": "is a", "title": "rdf:type", "to": "RepairProcess"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "Date-01", "label": "is a", "title": "rdf:type", "to": "TimeInterval"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "Date-02", "label": "is a", "title": "rdf:type", "to": "TimeInterval"},
            {"arrows": "to", "color": "#808080", "dashes": true, "from": "Date-03", "label": "is a", "title": "rdf:type", "to": "TimeInterval"},
            {"arrows": "to", "color": "#DC143C", "from": "Repair-01", "label": "has_participant", "to": "N737AA", "width": 2},
            {"arrows": "to", "color": "#DC143C", "from": "Repair-01", "label": "has_participant", "to": "JohnDoe", "width": 2},
            {"arrows": "to", "color": "#DC143C", "from": "Repair-02", "label": "has_participant", "to": "N905FR", "width": 2},
            {"arrows": "to", "color": "#DC143C", "from": "Repair-02", "label": "has_participant", "to": "JaneSmith", "width": 2},
            {"arrows": "to", "color": "#DC143C", "from": "Repair-03", "label": "has_participant", "to": "N905FR", "width": 2},
            {"arrows": "to", "color": "#DC143C", "from": "Repair-03", "label": "has_participant", "to": "JohnDoe", "width": 2},
            {"arrows": "to", "color": "#228B22", "from": "Repair-01", "label": "occurs_on", "to": "Date-01", "width": 2},
            {"arrows": "to", "color": "#228B22", "from": "Repair-02", "label": "occurs_on", "to": "Date-02", "width": 2},
            {"arrows": "to", "color": "#228B22", "from": "Repair-03", "label": "occurs_on", "to": "Date-03", "width": 2}
        ]);

        var options = {
            "edges": {
                "color": {
                    "inherit": true
                },
                "smooth": {
                    "enabled": true,
                    "type": "dynamic"
                }
            },
            "interaction": {
                "dragNodes": true,
                "hideEdgesOnDrag": false,
                "hideNodesOnDrag": false
            },
            "physics": {
                "enabled": true,
                "stabilization": {
                    "enabled": true,
                    "fit": true,
                    "iterations": 1000,
                    "onlyDynamicEdges": false,
                    "updateInterval": 50
                }
            }
        };

        // Draw Ontology Network
        var ontologyContainer = document.getElementById('ontologyNetwork');
        var ontologyData = {nodes: ontologyNodes, edges: ontologyEdges};
        var ontologyNetwork = new vis.Network(ontologyContainer, ontologyData, options);

        // Draw Knowledge Graph Network
        var kgContainer = document.getElementById('knowledgeGraphNetwork');
        var kgData = {nodes: kgNodes, edges: kgEdges};
        var kgNetwork = new vis.Network(kgContainer, kgData, options);

        // Store original node colors for knowledge graph
        var originalColors = {};
        var allKgNodes = kgNodes.get();
        allKgNodes.forEach(function(node) {
            originalColors[node.id] = node.color;
        });

        var currentHighlightedNode = null;

        // Function to highlight nodes in the knowledge graph
        function highlightNode(nodeId) {
            // Reset all nodes to original colors
            var updates = [];
            allKgNodes.forEach(function(node) {
                updates.push({
                    id: node.id, 
                    color: originalColors[node.id],
                    borderWidth: 1
                });
            });
            kgNodes.update(updates);
            
            // Highlight the selected node
            if (nodeId) {
                kgNodes.update({
                    id: nodeId, 
                    color: {
                        background: '#FFD700',
                        border: '#FF8C00'
                    },
                    borderWidth: 4
                });
                kgNetwork.focus(nodeId, {scale: 1.5, animation: {duration: 500, easingFunction: 'easeInOutQuad'}});
                currentHighlightedNode = nodeId;
            } else {
                currentHighlightedNode = null;
            }
        }

        // Function to highlight table cells
        function highlightTableCells(nodeId) {
            // Remove all highlights
            var allCells = document.querySelectorAll('.data-table td');
            allCells.forEach(function(cell) {
                cell.classList.remove('highlighted');
            });
            
            // Highlight cells with matching node
            if (nodeId) {
                var matchingCells = document.querySelectorAll('.data-table td[data-node="' + nodeId + '"]');
                matchingCells.forEach(function(cell) {
                    cell.classList.add('highlighted');
                });
            }
        }

        // Add click event listeners to table cells
        var tableCells = document.querySelectorAll('.data-table td');
        tableCells.forEach(function(cell) {
            cell.addEventListener('click', function(e) {
                e.stopPropagation();
                var nodeId = this.getAttribute('data-node');
                console.log('Table cell clicked:', nodeId);
                highlightNode(nodeId);
                highlightTableCells(nodeId);
            });
        });

        // Add click event listener to knowledge graph nodes
        kgNetwork.on('click', function(params) {
            console.log('Graph clicked:', params);
            if (params.nodes.length > 0) {
                var nodeId = params.nodes[0];
                console.log('Node clicked:', nodeId);
                highlightNode(nodeId);
                highlightTableCells(nodeId);
            } else {
                // Clicked on empty space - clear highlights
                console.log('Empty space clicked');
                highlightNode(null);
                highlightTableCells(null);
            }
        });

        // Add double-click to reset
        document.addEventListener('dblclick', function() {
            console.log('Double click - resetting');
            highlightNode(null);
            highlightTableCells(null);
        });
    </script>
</body>
</html>
